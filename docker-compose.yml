services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    environment:
      - POSTGRES_USER=farid
      - POSTGRES_PASSWORD=fjfj
      - POSTGRES_DB=wbd
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - PORT=4001
      - DATABASE_URL=postgresql://farid:fjfj@db:5432/wbd
    ports:
      - "127.0.0.1:4001:4001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4001
    depends_on:
      - backend
    networks:
      - my-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  my-network:
    driver: bridge
